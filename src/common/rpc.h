/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_H_RPCGEN
#define _RPC_H_RPCGEN

#define RPCGEN_VERSION 199506

#include <rpc/rpc.h>
#include <stdio.h>
#include <string.h>
#include "glib-2.0/glib.h"

#define MAX_LEN_USERNAME 80
#define MAX_LEN_USERIP 30
#define MAX_LEN_USERMODE 10
#define MAX_LEN_PASSWD 50
#define MAX_SIZE_RPC_MEM 1 * 1024 * 1024
#define VOS_OK 0
#define VOS_ERR 1

struct RPCInput
{
    u_int userid;
    u_char username[MAX_LEN_USERNAME];
    u_char userIP[MAX_LEN_USERIP];
    u_char usermode[MAX_LEN_USERMODE];
    u_int fun_index;
    u_int out_para_len;
    struct
    {
        u_int input_para_len;
        u_char *input_para_val;
    } input_para;
};
typedef struct RPCInput RPCInput;
#ifdef __cplusplus
extern "C" bool_t xdr_RPCInput(XDR *, RPCInput *);
#elif __STDC__
extern bool_t xdr_RPCInput(XDR *, RPCInput *);
#else  /* Old Style C */
bool_t xdr_RPCInput();
#endif /* Old Style C */

struct RPCOutput
{
    struct
    {
        u_int output_para_len;
        u_char *output_para_val;
    } output_para;
};
typedef struct RPCOutput RPCOutput;
#ifdef __cplusplus
extern "C" bool_t xdr_RPCOutput(XDR *, RPCOutput *);
#elif __STDC__
extern bool_t xdr_RPCOutput(XDR *, RPCOutput *);
#else  /* Old Style C */
bool_t xdr_RPCOutput();
#endif /* Old Style C */

struct RPCIDInput
{
    u_char username[MAX_LEN_USERNAME];
    u_char userIP[MAX_LEN_USERIP];
    u_char password[MAX_LEN_PASSWD];
};
typedef struct RPCIDInput RPCIDInput;
#ifdef __cplusplus
extern "C" bool_t xdr_RPCIDInput(XDR *, RPCIDInput *);
#elif __STDC__
extern bool_t xdr_RPCIDInput(XDR *, RPCIDInput *);
#else  /* Old Style C */
bool_t xdr_RPCIDInput();
#endif /* Old Style C */

struct RPCIDOutput
{
    u_int rev;
    u_int id;
};
typedef struct RPCIDOutput RPCIDOutput;
#ifdef __cplusplus
extern "C" bool_t xdr_RPCIDOutput(XDR *, RPCIDOutput *);
#elif __STDC__
extern bool_t xdr_RPCIDOutput(XDR *, RPCIDOutput *);
#else  /* Old Style C */
bool_t xdr_RPCIDOutput();
#endif /* Old Style C */

#define RPCAPIPROG ((rpc_uint)0x30090987)
#define RPCAPIVERS ((rpc_uint)1)

#ifdef __cplusplus
#define ALL_API_IN_ONE ((rpc_uint)1)
extern "C" RPCOutput *all_api_in_one_1(RPCInput *, CLIENT *);
extern "C" RPCOutput *all_api_in_one_1_svc(RPCInput *, struct svc_req *);
#define RPC_identify_remote ((rpc_uint)2)
extern "C" RPCIDOutput *rpc_identify_remote_1(RPCIDInput *, CLIENT *);
extern "C" RPCIDOutput *rpc_identify_remote_1_svc(RPCIDInput *, struct svc_req *);

#elif __STDC__
#define ALL_API_IN_ONE ((rpc_uint)1)
extern RPCOutput *all_api_in_one_1(RPCInput *, CLIENT *);
extern RPCOutput *all_api_in_one_1_svc(RPCInput *, struct svc_req *);
#define RPC_identify_remote ((rpc_uint)2)
extern RPCIDOutput *rpc_identify_remote_1(RPCIDInput *, CLIENT *);
extern RPCIDOutput *rpc_identify_remote_1_svc(RPCIDInput *, struct svc_req *);

#else /* Old Style C */
#define ALL_API_IN_ONE ((rpc_uint)1)
extern RPCOutput *all_api_in_one_1();
extern RPCOutput *all_api_in_one_1_svc();
#define RPC_identify_remote ((rpc_uint)2)
extern RPCIDOutput *rpc_identify_remote_1();
extern RPCIDOutput *rpc_identify_remote_1_svc();
#endif /* Old Style C */

#endif /* !_RPC_H_RPCGEN */
